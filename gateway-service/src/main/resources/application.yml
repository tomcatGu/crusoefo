server:
  port: 6601
 
spring:
  application:
    name: gateway-service
  cloud:
    config:
      enabled: false
    consul:
      host: localhost
      port: 8500
      discovery:
        prefer-ip-address: true
        service-name: gateway-service
    gateway:
      #globalcors:
      #  cors-configurations:
      #    '[/**]':
            #allowCredentials: true
      #      allowedOriginPatterns: "*"
      #      allowedMethods: "*"
      #      allowedHeaders: "*"
      #  add-to-simple-url-handler-mapping: true
      routes:
      - id: baidu
        uri: http://www.baidu.com/
        predicates:
        - Path=/baidu/**
        filters:
        - JwtCheck
        #- PreOauth2SSOGatewayFilter
      - id: login-service
        uri: lb://oauth2-service/login
        predicates:
        - Path=/auth/**
        filters:
        - StripPrefix=1
      - id: test-service
        uri: lb://oauth2-service/
        predicates:
        - Path=/uri/**
      - id: auth-service
        uri: lb://oauth2-service/oauth2
        predicates:
        - Path=/oauth2/**
        filters:
        - OAuth=true
      - id: order-service
        uri: lb://order-service/
        predicates:
          - Path=/order/**
      - id: camunda-service
        uri: lb://camunda-service/
        predicates:
        - Path=/engine-rest/**
        filters:
        - JwtCheck
      - id: user-service
        uri: lb://user-service/
        predicates:
        - Path=/identity/**
        filters:
        - StripPrefix=1
        - JwtCheck
  redis:
    database: 0
    host: localhost
    port: 6379
    password: 
    timeout: 2000
    #cluster:
      #nodes: 192.168.211.134:7000,192.168.211.134:7001
      #- 
      #max-redirects: 
    jedis:
      pool:
        max-active: 8
        max-wait: -1
        max-idle: 8
        min-idle: 0
#  security:
#    oauth2:
#      client:
#        registration:
#          crusoe:
#            client-id: webapp
#            client-secret: 123456
#            authorization-grant-type: authorization_code
#            redirect-uri-template: http://localhost:6601/login/oauth2/code/crusoe
#        provider:
#          crusoe:
#            authorization-uri: http://localhost:9000/oauth/authorize
#            token-uri: http://localhost:9000/oauth/token
#            jwt-key-uri: http://localhost:9000/oauth/token_key
#            user-info-uri: http://localhost:9000/user
#            #prefer-token-info: false
#            userNameAttribute: user_name


logging:
  level:
    org.springframework.cloud.gateway: DEBUG
    org.springframework.http.server.reactive: DEBUG
    org.springframework.web.reactive: DEBUG
    reactor.ipc.netty: DEBUG
    

management:
  endpoints:
    web:
      exposure:
        include: "*"
  endpoint:
    health:
      show-details: ALWAYS

#https://github.com/artemMartynenko/spring-cloud-gateway-oauth2-sso-sample-application
