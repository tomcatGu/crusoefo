//use jsoup to call restAPI
with (new JavaImporter(org.jsoup))
{
   var body = {
   "rolename": "hooo",

   }

  var doc = Jsoup.connect('http://localhost:6601/identity/role/create')
                  // .method(Java.type('org.jsoup.Connection.Method').GET)
                  .method(Java.type('org.jsoup.Connection.Method').POST)
                  .header('Accept', 'application/json')
                  .header('Content-Type', 'application/json')
                  .header('Authorization','Bearer '+ execution.getVariable('access_token'))  
                  // .data('filterABC', 'subgroup1')
                  .requestBody(JSON.stringify(body))
                  .timeout(30000)
                  .ignoreContentType(true) 
                  .execute()

  var resBody = doc.body()
  var resStatusCode = doc.statusCode()
  var resStatusMessage = doc.statusMessage()
  var resContentType = doc.contentType()
  var resCharSet = doc.charset()
}

//formCreate snippet
[
    {
        type: "input",
        field: "rolename",
        title: "角色名称",
    },
    {
        type: "ElButton",
        children: ["提交"],
        on: {
            click: () => {

                const roleCreate= () => import('./api/role.js')

                formCreate.fApi.submit((formData, $f) => {
                    //alert(JSON.stringify(formData));
                    roleCreate(formData).then(response => {
                        // console.log(response)
                        Message({
                            message: '添加角色成功。',
                            type: 'success',
                            duration: 2 * 1000
                        })
                    })
                })

            }
        }
    }
]

//tree 
{
        type: "tree",
        title: "权限",
        field: "rule",
        value: [],
        props: {
            data: [],
            lazy:true,
            load: (node, resolve) => {
                if (node.level === 0) {

                    return resolve([{ title: 'region',id: 0 }]);
                }
                if (node.level > 1) return resolve([]);

                setTimeout(() => {
                    const data = [{
                        title: 'leaf',
                        id: 1,
                        leaf: true
                    }, {
                        title: 'zone',
                        id: 2
                    }];
                    let leafs=[]

                    requestData("/department/0","GET").then(response =>{
                        for(let i=0;i<response.length;i++){
                            leafs.push({title:response[i].name,id:response[i].id})
                        }
                        resolve(leafs);
                    })


                }, 500);
            },

            props: {
                "label": "title"
            }
        }
    }